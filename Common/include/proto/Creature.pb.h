// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Creature.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Creature_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Creature_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Creature_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Creature_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Creature_2eproto;
class AllAttributeDataNotify;
class AllAttributeDataNotifyDefaultTypeInternal;
extern AllAttributeDataNotifyDefaultTypeInternal _AllAttributeDataNotify_default_instance_;
class ModuleData;
class ModuleDataDefaultTypeInternal;
extern ModuleDataDefaultTypeInternal _ModuleData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::AllAttributeDataNotify* Arena::CreateMaybeMessage<::AllAttributeDataNotify>(Arena*);
template<> ::ModuleData* Arena::CreateMaybeMessage<::ModuleData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ModuleData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ModuleData) */ {
 public:
  ModuleData();
  virtual ~ModuleData();

  ModuleData(const ModuleData& from);
  ModuleData(ModuleData&& from) noexcept
    : ModuleData() {
    *this = ::std::move(from);
  }

  inline ModuleData& operator=(const ModuleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleData& operator=(ModuleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModuleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModuleData* internal_default_instance() {
    return reinterpret_cast<const ModuleData*>(
               &_ModuleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModuleData& a, ModuleData& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModuleData* New() const final {
    return CreateMaybeMessage<ModuleData>(nullptr);
  }

  ModuleData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModuleData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModuleData& from);
  void MergeFrom(const ModuleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ModuleData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Creature_2eproto);
    return ::descriptor_table_Creature_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgTypeStrFieldNumber = 1,
    kBinaryFieldNumber = 2,
  };
  // string msg_type_str = 1;
  void clear_msg_type_str();
  const std::string& msg_type_str() const;
  void set_msg_type_str(const std::string& value);
  void set_msg_type_str(std::string&& value);
  void set_msg_type_str(const char* value);
  void set_msg_type_str(const char* value, size_t size);
  std::string* mutable_msg_type_str();
  std::string* release_msg_type_str();
  void set_allocated_msg_type_str(std::string* msg_type_str);

  // string binary = 2;
  void clear_binary();
  const std::string& binary() const;
  void set_binary(const std::string& value);
  void set_binary(std::string&& value);
  void set_binary(const char* value);
  void set_binary(const char* value, size_t size);
  std::string* mutable_binary();
  std::string* release_binary();
  void set_allocated_binary(std::string* binary);

  // @@protoc_insertion_point(class_scope:ModuleData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_type_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr binary_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Creature_2eproto;
};
// -------------------------------------------------------------------

class AllAttributeDataNotify :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AllAttributeDataNotify) */ {
 public:
  AllAttributeDataNotify();
  virtual ~AllAttributeDataNotify();

  AllAttributeDataNotify(const AllAttributeDataNotify& from);
  AllAttributeDataNotify(AllAttributeDataNotify&& from) noexcept
    : AllAttributeDataNotify() {
    *this = ::std::move(from);
  }

  inline AllAttributeDataNotify& operator=(const AllAttributeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllAttributeDataNotify& operator=(AllAttributeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AllAttributeDataNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllAttributeDataNotify* internal_default_instance() {
    return reinterpret_cast<const AllAttributeDataNotify*>(
               &_AllAttributeDataNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AllAttributeDataNotify& a, AllAttributeDataNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(AllAttributeDataNotify* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AllAttributeDataNotify* New() const final {
    return CreateMaybeMessage<AllAttributeDataNotify>(nullptr);
  }

  AllAttributeDataNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AllAttributeDataNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AllAttributeDataNotify& from);
  void MergeFrom(const AllAttributeDataNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllAttributeDataNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AllAttributeDataNotify";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Creature_2eproto);
    return ::descriptor_table_Creature_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kOidFieldNumber = 1,
  };
  // repeated .ModuleData data = 2;
  int data_size() const;
  void clear_data();
  ::ModuleData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ModuleData >*
      mutable_data();
  const ::ModuleData& data(int index) const;
  ::ModuleData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ModuleData >&
      data() const;

  // uint64 oid = 1;
  void clear_oid();
  ::PROTOBUF_NAMESPACE_ID::uint64 oid() const;
  void set_oid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:AllAttributeDataNotify)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ModuleData > data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 oid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Creature_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModuleData

// string msg_type_str = 1;
inline void ModuleData::clear_msg_type_str() {
  msg_type_str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ModuleData::msg_type_str() const {
  // @@protoc_insertion_point(field_get:ModuleData.msg_type_str)
  return msg_type_str_.GetNoArena();
}
inline void ModuleData::set_msg_type_str(const std::string& value) {
  
  msg_type_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ModuleData.msg_type_str)
}
inline void ModuleData::set_msg_type_str(std::string&& value) {
  
  msg_type_str_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ModuleData.msg_type_str)
}
inline void ModuleData::set_msg_type_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_type_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ModuleData.msg_type_str)
}
inline void ModuleData::set_msg_type_str(const char* value, size_t size) {
  
  msg_type_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ModuleData.msg_type_str)
}
inline std::string* ModuleData::mutable_msg_type_str() {
  
  // @@protoc_insertion_point(field_mutable:ModuleData.msg_type_str)
  return msg_type_str_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModuleData::release_msg_type_str() {
  // @@protoc_insertion_point(field_release:ModuleData.msg_type_str)
  
  return msg_type_str_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleData::set_allocated_msg_type_str(std::string* msg_type_str) {
  if (msg_type_str != nullptr) {
    
  } else {
    
  }
  msg_type_str_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_type_str);
  // @@protoc_insertion_point(field_set_allocated:ModuleData.msg_type_str)
}

// string binary = 2;
inline void ModuleData::clear_binary() {
  binary_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ModuleData::binary() const {
  // @@protoc_insertion_point(field_get:ModuleData.binary)
  return binary_.GetNoArena();
}
inline void ModuleData::set_binary(const std::string& value) {
  
  binary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ModuleData.binary)
}
inline void ModuleData::set_binary(std::string&& value) {
  
  binary_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ModuleData.binary)
}
inline void ModuleData::set_binary(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  binary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ModuleData.binary)
}
inline void ModuleData::set_binary(const char* value, size_t size) {
  
  binary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ModuleData.binary)
}
inline std::string* ModuleData::mutable_binary() {
  
  // @@protoc_insertion_point(field_mutable:ModuleData.binary)
  return binary_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModuleData::release_binary() {
  // @@protoc_insertion_point(field_release:ModuleData.binary)
  
  return binary_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleData::set_allocated_binary(std::string* binary) {
  if (binary != nullptr) {
    
  } else {
    
  }
  binary_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), binary);
  // @@protoc_insertion_point(field_set_allocated:ModuleData.binary)
}

// -------------------------------------------------------------------

// AllAttributeDataNotify

// uint64 oid = 1;
inline void AllAttributeDataNotify::clear_oid() {
  oid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AllAttributeDataNotify::oid() const {
  // @@protoc_insertion_point(field_get:AllAttributeDataNotify.oid)
  return oid_;
}
inline void AllAttributeDataNotify::set_oid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  oid_ = value;
  // @@protoc_insertion_point(field_set:AllAttributeDataNotify.oid)
}

// repeated .ModuleData data = 2;
inline int AllAttributeDataNotify::data_size() const {
  return data_.size();
}
inline void AllAttributeDataNotify::clear_data() {
  data_.Clear();
}
inline ::ModuleData* AllAttributeDataNotify::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:AllAttributeDataNotify.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ModuleData >*
AllAttributeDataNotify::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:AllAttributeDataNotify.data)
  return &data_;
}
inline const ::ModuleData& AllAttributeDataNotify::data(int index) const {
  // @@protoc_insertion_point(field_get:AllAttributeDataNotify.data)
  return data_.Get(index);
}
inline ::ModuleData* AllAttributeDataNotify::add_data() {
  // @@protoc_insertion_point(field_add:AllAttributeDataNotify.data)
  return data_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ModuleData >&
AllAttributeDataNotify::data() const {
  // @@protoc_insertion_point(field_list:AllAttributeDataNotify.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Creature_2eproto
